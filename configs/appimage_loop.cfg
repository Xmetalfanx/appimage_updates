. configs/appimage.cfg


# functions moved here are needed (moved here just for organization) to loop through the ~/Applications dir

# idea get local name of appimage file (basename likely to be used)
function get_local_appimage_name() {

    local_appimage_location=/home/$USER/Applications

    echo -e "Finding ${program_name}'s local AppImage"
    # ? can the find command take an argument?
    local_appimage_path=$(find "${local_appimage_location}" -type f -iname "${program_name}*" )
    local_appimage_name=$(basename ${local_appimage_path})

    # echo -e "local_appimage_path: ${local_appimage_path}"
    # echo -e "local_appimage_name: ${local_appimage_name}\v"
}


function assign_appimage_vars() {
    # this SHOULD be just the base filename (including .AppImage)
    single_appimage_name=$(basename ${single_appimage})
    #echo -e "\nsingle_appimage_name: $single_appimage_name"

    # this way MAY NOT work for all cases
    # s/[-_]v[0-9]//; 
        # - or I followed by a number, remove that 
    # s/[-_][0-9].*$//
        # (? redundant) - if there is no "v" before the version number 
    appimage_name=$(echo "${single_appimage_name}" | sed "s/[-_]v[0-9].*$//;s/[-_][0-9].*$//" )
    echo -e "appimage_name: ${appimage_name}"
}


function remove_extracted_appimage_dir() {
    echo -e "Removing exacted appimage dir for ${appimage_name}"
    rm -rf squashfs-root
}


# just to mount the location
function mount_local_appimage() {

    # this IS a full local path
    #echo -e "\vsingle_appimage:\t${single_appimage}"

    extract_current_appimage=$(echo -e "${single_appimage} --appimage-extract" )

    current_appimage_mounted_dir=$(${extract_current_appimage} 2>&1 )
    #echo -e "current_appimage_mounted_dir: ${current_appimage_mounted_dir}"

    get_current_local_appimage_version

    remove_extracted_appimage_dir

}



function loop_through_appimages() {
    get_local_appimage_name

    # single_appimage is the full path to the local app image during that loop
    for single_appimage in ${local_appimage_location}/*.*
    do
        assign_appimage_vars

        sleep 1

        #echo -e "\vProcessing ${appimage_basename} ..."

        mount_local_appimage

    done

}