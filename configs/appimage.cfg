# 1 - Mount appimage content 
#     - example: ./balenaEtcher-1.18.11-x64.AppImage --appimage-mount
#                   - the mount commands mounts AND sends the path info to stdout 

# 2 - (not sure this is the best option) look for the .Desktop file
# 3 - get X-AppImage-Version version (format is "X-AppImage-Version=1.5.0")



# idea get local name of appimage file (basename likely to be used)
function get_appimage_name() {
    local_appimage_location=/home/$USER/Applications

    echo -e "Finding ${program_name}'s local AppImage"
    # ? can the find command take an argument?
    local_appimage_path=$(find /home/$USER/Applications -type f -iname "*.AppImage" | awk -F "/" ' {print $5}' )
    #local_appimage_name=$(echo ${local_appimage_path} | sed "s/_.*$//" )

}

#- search in that location for the .Desktop file
function get_local_appimage_version() {
    # mounted location needed from "mount_local_appimage" function

    #local_appimage_version=$(echo -e "${local_appimage_name}" | sed "s/$program_name//I;s/[a-zA-Z0-9]+64.*AppImage//g" )
    local_appimage_version=$(echo -e "${local_appimage_name}" | sed "s/[_a-zA-Z0-9]64.*AppImage//g;s/$program_name[-_]//;s/[-_].*$//" )

    echo -e "local_appimage_version: ${local_appimage_version}\v"
}

# mount local appimage
# 1 - get /tmp/whatever location
# 2 - mount that location

# function mount_local_appimage() {

# #     - example: ./balenaEtcher-1.18.11-x64.AppImage --appimage-mount
# #                   - the mount commands mounts AND sends the path info to stdout 

# }

function get_local_appimage_info() {
    get_appimage_name

    get_local_appimage_version
}


function loop_through_appimages() {
    get_appimage_name

    for single_appimage in ${local_appimage_location}/*.*
    do 

        appimage_basename=$(basename ${single_appimage} )
        #echo -e "\vProcessing ${appimage_basename} ..."

        single_appimage_name=$(basename ${single_appimage})
        echo -e "single_appimage_name:$single_appimage_name"

        # appimage_name=$(echo "${single_appimage_name}" | sed "s/_.*$//;s/\B//;s/-[v0-9].*$//" )
        appimage_name=$(echo "${single_appimage_name}" | sed -E "s/(_|-)[0-9].*$//" )
        echo -e "appimage_name: ${appimage_name}"

        name_version_filter="${appimage_name}"
        ending_version_filter="64.*AppImage"
        number_version_filter="^\W[0-9]"

        #appimage_version=$(echo -e "${single_appimage_name}" | sed "s/$name_version_filter//;s/$ending_version_filter//;s/$number_version_filter//" )
        
        appimage_version=$(echo -e "${appimage_name}" | sed -E "s/[A-Z|a-z]//g" )

        echo -e "appimage_version: ${appimage_version}\v"
    done

}