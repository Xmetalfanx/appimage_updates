

#- search in that location for the .Desktop file
function get_local_appimage_version() {
    # mounted location needed from "mount_local_appimage" function

    #local_appimage_version=$(echo -e "${local_appimage_name}" | sed "s/$program_name//I;s/[a-zA-Z0-9]+64.*AppImage//g" )
    local_appimage_version=$(echo -e "${local_appimage_name}" | sed "s/[_a-zA-Z0-9]64.*AppImage//g;s/$program_name[-_]//;s/[-_].*$//" )

    echo -e "local_appimage_version: ${local_appimage_version}\v"
}


function find_appimage_internal_desktop_file() {
 #code for inside the mounted location 
    single_app_image_mounted_desktop_file=$(find . -type f -iname "*.desktop")


    # look for X-AppImage-Version= in $
    version_test=$(grep "X-AppImage-Version=" "${appimage_mount_folder}/${appimage_name}.desktop" )

    echo -e "version_test: ${version_test}"

}

function get_current_local_appimage_version() {
    current_appimage_desktop_file=$(find squashfs-root -type f -iname "*.Desktop")
    #echo -e "\v current_appimage_desktop_file: ${current_appimage_desktop_file}"

    clear
    current_appimage_local_version=$(awk -F= '{IGNORECASE=1} /X-AppImage-Version/ { print $2;exit }' ${current_appimage_desktop_file} )
    
    # also sends to a file 
    echo -e "Current version for local ${appimage_name} AppImage: ${current_appimage_local_version}" >> local_appimage_versions.txt


    # not sure if this is best place ... maybe make that "remove extract" function a universal cleanup funct
    unset ${current_appimage_local_version}
}



function get_local_appimage_info() {
    get_appimage_name

    get_local_appimage_version
}

#####################################################
